<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="description" content="">
    <meta name="author" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1.0, user-scalable=no">
    <title>Potree Viewer</title>

    <link rel="stylesheet" type="text/css" href="<%= libpath %>/build/potree/potree.css">
    <link rel="stylesheet" type="text/css" href="<%= libpath %>/libs/jquery-ui/jquery-ui.min.css">
    <link rel="stylesheet" type="text/css" href="<%= libpath %>/libs/openlayers3/ol.css">
    <link rel="stylesheet" type="text/css" href="<%= libpath %>/libs/spectrum/spectrum.css">
    <link rel="stylesheet" type="text/css" href="<%= libpath %>/libs/jstree/themes/mixed/style.css">
</head>

<body>
    <script src="<%= libpath %>/libs/jquery/jquery-3.1.1.min.js"></script>
    <script src="<%= libpath %>/libs/spectrum/spectrum.js"></script>
    <script src="<%= libpath %>/libs/jquery-ui/jquery-ui.min.js"></script>
    <script src="<%= libpath %>/libs/other/BinaryHeap.js"></script>
    <script src="<%= libpath %>/libs/tween/tween.min.js"></script>
    <script src="<%= libpath %>/libs/d3/d3.js"></script>
    <script src="<%= libpath %>/libs/proj4/proj4.js"></script>
    <script src="<%= libpath %>/libs/openlayers3/ol.js"></script>
    <script src="<%= libpath %>/libs/i18next/i18next.js"></script>
    <script src="<%= libpath %>/libs/jstree/jstree.js"></script>
    <script src="<%= libpath %>/build/potree/potree.js"></script>
    <script src="<%= libpath %>/libs/plasio/js/laslaz.js"></script>
    <script>
        let currentData = "<%= data %>"; // Example: "08/0"
    
        function submitForm() {
            try {
                const str = currentData.split('/');
                if (str.length < 2) {
                    console.error("Invalid data format:", str);
                    return;
                }
    
                let int = parseInt(str[1], 10) || 0; // Convert to integer
                int += 1; // Increment dataset index
    
                currentData = `${str[0]}/${int}`; // Update global data reference
                const newUrl = `<%= libpath %>/point_cloud/${currentData}/metadata.json`;
    
                console.log("Loading new dataset:", newUrl);
    
                // Load new point cloud
                Potree.loadPointCloud(newUrl).then(e => {
                    let pointcloud = e.pointcloud;
                    let material = pointcloud.material;
    
                    material.minSize = 2;
                    material.pointSizeType = Potree.PointSizeType.ADAPTIVE;
                    viewer.scene.removePointCloud()
                    viewer.scene.addPointCloud(pointcloud);
                    viewer.fitToScreen();
                });
    
            } catch (error) {
                console.error("Error in submitForm:", error);
            }
        }
    </script>
    
    
    <div class="potree_container" style="position: absolute; width: 100%; height: 100%; left: 0px; top: 0px; ">
        <div id="potree_render_area">
            <span style="position: absolute; bottom: 10px; left: 50%; transform: translateX(-50%); z-index: 10000">
                <form id="dataForm" action="/" method="POST">
                    <button type="button" onclick="submitForm()">Load Next</button>
                </form>

                
            </span>
        </div>
        <div id="potree_sidebar_container"> </div>
    </div>

    <script type="module">

        import * as THREE from "<%= libpath %>/libs/three.js/build/three.module.js";

        window.viewer = new Potree.Viewer(document.getElementById("potree_render_area"));
        const url = '<%= libpath %>/point_cloud/<%= data %>/metadata.json'
        console.log('url', url)
        const description = `Classification <a target='_blank' href=` + url + ` >PG&E</a> `
        console.log(description)
        viewer.setDescription(description);

        viewer.setEDLEnabled(true);
        viewer.setFOV(60);
        viewer.setPointBudget(2_000_000);

        viewer.loadGUI(() => {
            $("#menu_filters").next().show();
            viewer.toggleSidebar();
        });

        const interest_scheme = <%- JSON.stringify(interest_scheme) %>

        console.log(interest_scheme)
        Potree.loadPointCloud(url).then(e => {
            let pointcloud = e.pointcloud;
            let material = pointcloud.material;


            material.minSize = 2;
            material.pointSizeType = Potree.PointSizeType.ADAPTIVE;

            viewer.scene.addPointCloud(pointcloud);
            viewer.fitToScreen();
            viewer.setClassifications(interest_scheme)
        });

    </script>

</body>


</html>