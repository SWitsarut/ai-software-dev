services:
  client:
    container_name: vite-client
    restart: always
    build:
      context: "./client"
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - "./client:/app"
      - "/app/node_modules"
    environment:
      - "CHOKIDAR_USEPOLLING=true"
    command: >
      sh -c "npm install && npm run dev"
  server:
    container_name: express-server
    restart: always
    build:
      context: "./server"
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - "./server:/app"
      - "./server/uploaded:/app/uploaded"
    environment:
      - "CHOKIDAR_USEPOLLING=true"
  model_server:
    container_name: model_server
    stdin_open: true # -i (interactive)
    tty: true # -t (allocate pseudo-TTY)
    build:
      context: "./RandLA-Net"
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - "./RandLA-Net:/app"
      - "./server/uploaded:/app/uploaded"
      - "./server/public/point_cloud:/app/public"

  mongo:
    image: mongo
    container_name: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    volumes:
      - ./db:/data/db
  mongo-express:
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      ME_CONFIG_MONGODB_URL: 'mongodb://${MONGO_INITDB_ROOT_USERNAME}:${MONGO_INITDB_ROOT_PASSWORD}@mongo:27017/'
      ME_CONFIG_BASICAUTH: false
  stripe-cli:
    image: stripe/stripe-cli
    restart: always
    container_name: stripe-cli
    command: "listen --api-key ${STRIPE_PRIVATE} --device-name Docker-stripe-cli --forward-to server:${API_PORT}/webhook/ "

volumes:
  db:
